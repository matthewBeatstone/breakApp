"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var filterList_1 = __importDefault(require("./filterList"));
var getObjectDeepKeyValue_1 = __importDefault(require("./getObjectDeepKeyValue"));
var isType_1 = require("./isType");
var defaultSearchOptions = {
    by: '',
    caseInsensitive: false,
    everyWord: false,
    term: ''
};
var getFilterByFn = function (term, by, caseInsensitive) {
    if (caseInsensitive === void 0) { caseInsensitive = false; }
    term = (caseInsensitive ? term.toLowerCase() : term).trim();
    if (isType_1.isFunction(by)) {
        return function (item, idx) {
            return by(item, term, idx);
        };
    }
    return function (item) {
        var keyValue = (isType_1.isObject(item) || isType_1.isArray(item)) ?
            getObjectDeepKeyValue_1.default(by, item) :
            item;
        var value = caseInsensitive ? ("" + keyValue).toLowerCase() : "" + keyValue;
        return value.search(term) >= 0;
    };
};
var searchList = function (list, options) {
    if (!isType_1.isObject(options) || Object.keys(options).length === 0) {
        options = defaultSearchOptions;
    }
    if (list.length > 0) {
        var term = options.term, by_1 = options.by;
        if (term && by_1 && term.length >= 3) {
            var everyWord = options.everyWord, caseInsensitive_1 = options.caseInsensitive;
            if (everyWord) {
                var termWords = term.trim().split(/\s+/).filter(function (word) { return (word.length >= 3); });
                if (termWords.length > 0) {
                    var searchedList_1 = new Set([]);
                    termWords.forEach(function (word) {
                        var filterByFn = getFilterByFn(word, by_1, caseInsensitive_1);
                        filterList_1.default(list, filterByFn).forEach(function (item) { return searchedList_1.add(item); });
                    });
                    return Array.from(searchedList_1);
                }
            }
            else {
                var filterByFn = getFilterByFn(term, by_1, caseInsensitive_1);
                return filterList_1.default(list, filterByFn);
            }
        }
    }
    return list;
};
exports.default = searchList;
//# sourceMappingURL=searchList.js.map